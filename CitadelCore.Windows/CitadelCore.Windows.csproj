<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Version>3.0.1</Version>
    <Authors>Jesse Nicholson</Authors>
    <Company>Technik Empire</Company>
    <Description>Transparent filtering proxy engine for Windows.</Description>
    <Copyright>Copyright 2017-2018 Jesse Nicholson</Copyright>
    <PackageLicenseUrl>https://www.gnu.org/licenses/lgpl-3.0.en.html</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/TechnikEmpire/CitadelCore.Windows</PackageProjectUrl>
    <RepositoryUrl>https://github.com/TechnikEmpire/CitadelCore.Windows</RepositoryUrl>
    <PackageReleaseNotes>Inherits the following from CitadelCore update:
Major API overhaul.
Adds the ability to inspect streams in addition to complete payloads. It's also copy-less. This means, for example, that one could dynamically inspect video streams without interrupting or buffering the user experience. You can also terminate streams while inspecting.
Adds the ability to fully modify HTTP headers and bodies at-will.
Provides copy-less access to payloads for inspection.
Moves proxy constructor arguments into a configuration class for neatness.
No longer loads all non-ignored payloads into memory.
Fixes an issue where blocked responses would not actually get blocked.
Provides a great deal of information about connections now, which makes it possible to match requests and responses to the name of software behind the traffic by combining data in the firewall callback with data in the new HttpMessageInfo class that is now passed to library users.
Misc cleanup of source.</PackageReleaseNotes>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
    <FileVersion>3.0.1.0</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>bin\Release\netstandard2.0\CitadelCore.Windows.xml</DocumentationFile>
    <LangVersion>default</LangVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup Label="dotnet pack instructions">
    <Content Include="build\*.targets">
      <Pack>true</Pack>
      <PackagePath>build\</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CitadelCore" Version="3.0.1" />
  </ItemGroup>
    
  <Target Name="CollectRuntimeOutputs" BeforeTargets="_GetPackageFiles">
    <!-- Collect these items inside a target that runs after build but before packaging. -->
    <ItemGroup>
      <Content Include="$(OutputPath)\x86\*.dll;$(OutputPath)\x86\*.sys;">
        <Pack>true</Pack>
        <PackagePath>build\x86\</PackagePath>
      </Content>
    </ItemGroup>
    
    <ItemGroup>
      <Content Include="$(OutputPath)\x64\*.dll;$(OutputPath)\x64\*.sys;">
        <Pack>true</Pack>
        <PackagePath>build\x64\</PackagePath>
      </Content>
    </ItemGroup>

    <ItemGroup>
      <Content Include="$(OutputPath)\*.pdb;">
        <Pack>true</Pack>
        <PackagePath>build\</PackagePath>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="xcopy /E /Y /C &quot;$(ProjectDir)\Lib\WinDivert\x64\*.dll&quot; &quot;$(OutDir)\x64\&quot;&#xD;&#xA;xcopy /E /Y /C &quot;$(ProjectDir)\Lib\WinDivert\x64\*.sys&quot; &quot;$(OutDir)\x64\&quot;&#xD;&#xA;xcopy /E /Y /C &quot;$(ProjectDir)\Lib\WinDivert\x86\*.dll&quot; &quot;$(OutDir)\x86\&quot;&#xD;&#xA;xcopy /E /Y /C &quot;$(ProjectDir)\Lib\WinDivert\x86\*.sys&quot; &quot;$(OutDir)\x86\&quot;" />
  </Target>

</Project>
